{"version":3,"sources":["components/ChatListItem/index.js","components/ChatIntro/index.js","components/MessageItem/index.js","helpers/firebaseConfig.js","helpers/Api.js","components/ChatWindow/index.js","components/NewChat/index.js","components/Login/index.js","App.js","index.js"],"names":["ChatListItem","data","onClick","active","useState","time","setTime","useEffect","last_message_date","date","Date","seconds","hours","getHours","minutes","getMinutes","type","className","role","aria-selected","src","image","alt","title","last_message","ChatIntro","href","target","rel","MessageItem","user","style","justifyContent","id","author","backgroundColor","body","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","db","firestore","functions","fbPopup","provider","auth","FacebookAuthProvider","signInWithPopup","googlePopup","GoogleAuthProvider","addUser","collection","doc","set","name","avatar","merge","getContactList","userId","list","get","forEach","result","push","addNewChat","userChat","add","messages","users","newChat","update","chats","FieldValue","arrayUnion","chat_id","with","onChatList","setChatList","onSnapshot","exists","sort","a","b","undefined","onChatContent","chatId","setList","setUsers","sendMessage","chatData","formatMessageDate","i","userData","e","promises","Promise","all","ChatWindow","recognition","SpeechRecognition","window","webkitSpeechRecognition","useRef","emojiOpen","setEmojiOpen","text","setText","listening","setListening","textPlaceholder","setTextPlaceholder","handleSendClick","Api","current","scrollHeight","offsetHeight","scrollTop","ref","map","item","key","height","onEmojiClick","emojiObject","emoji","disableSearchBar","disableSkinTonePicker","width","aria-hidden","color","placeholder","value","onChange","onKeyUp","stop","onstart","onend","onresult","results","transcript","start","NewChat","show","setShow","getList","chatUser","left","Login","onReceive","handleFacebookLogin","alert","message","handleGoogleLogin","App","chatList","activeChat","setActiveChat","setUser","showNewChat","setShowNewChat","handleLoginData","fbUser","newUser","uid","displayName","photoURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.899df651.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nconst ChatListItem = ({ data, onClick, active }) => {\r\n  const [time, setTime] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (data.last_message_date) {\r\n      const date = new Date(data.last_message_date.seconds * 1000);\r\n\r\n      let hours = date.getHours();\r\n      let minutes = date.getMinutes();\r\n\r\n      hours = hours < 10 ? `0${hours}` : hours;\r\n      minutes = minutes < 10 ? `0${minutes}` : minutes;\r\n\r\n      setTime(`${hours}:${minutes}`);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <button type=\"button\" className=\"chatListItem\" onClick={onClick} role=\"row\" aria-selected={active}>\r\n      <img\r\n        className=\"chatListItem--avatar\"\r\n        src={data.image}\r\n        alt={data.title}\r\n      />\r\n\r\n      <div className=\"chatListItem--lines\">\r\n        <div className=\"chatListItem--line\">\r\n          <div className=\"chatListItem--name\">{data.title}</div>\r\n\r\n          <div className=\"chatListItem--date\">{time}</div>\r\n        </div>\r\n\r\n        <div className=\"chatListItem--line\">\r\n          <div className=\"chatListItem--lastMsg\">\r\n            <p>{data.last_message}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nChatListItem.propTypes = {\r\n  data: PropTypes.shape({\r\n    image: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    last_message: PropTypes.string,\r\n    last_message_date: PropTypes.shape({\r\n      seconds: PropTypes.number.isRequired,\r\n      nanoseconds: PropTypes.number,\r\n    }),\r\n  }).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  active: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default ChatListItem;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nconst ChatIntro = () => (\r\n  <div className=\"chatIntro\">\r\n    <img\r\n      src=\"https://web.whatsapp.com/img/intro-connection-hq-light_9466a20e6d2921a21ac7ab82419be157.jpg\"\r\n      alt=\"Whatsapp Connected\"\r\n    />\r\n\r\n    <h1>Bem-vindo ao Clone do Whatsapp</h1>\r\n\r\n    <h2>\r\n      Feito por\r\n      {' '}\r\n      <a\r\n        href=\"https://github.com/christopherldo/\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        @christopherldo\r\n      </a>\r\n    </h2>\r\n  </div>\r\n);\r\n\r\nexport default ChatIntro;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nconst MessageItem = ({ data, user }) => {\r\n  const [time, setTime] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (data.date) {\r\n      const date = new Date(data.date.seconds * 1000);\r\n\r\n      let hours = date.getHours();\r\n      let minutes = date.getMinutes();\r\n\r\n      hours = hours < 10 ? `0${hours}` : hours;\r\n      minutes = minutes < 10 ? `0${minutes}` : minutes;\r\n\r\n      setTime(`${hours}:${minutes}`);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"messageLine\" style={{ justifyContent: user.id === data.author ? 'flex-end' : 'flex-start' }}>\r\n      <div className=\"messageItem\" style={{ backgroundColor: user.id === data.author ? '#dcf8c6' : '#fff' }}>\r\n        <div className=\"messageText\">{data.body}</div>\r\n\r\n        <div className=\"messageDate\">{time}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMessageItem.propTypes = {\r\n  data: PropTypes.shape({\r\n    author: PropTypes.string.isRequired,\r\n    body: PropTypes.string.isRequired,\r\n    date: PropTypes.shape({\r\n      seconds: PropTypes.number.isRequired,\r\n      nanoseconds: PropTypes.number,\r\n    }).isRequired,\r\n  }).isRequired,\r\n  user: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default MessageItem;\r\n","const firebaseConfig = {\r\n  apiKey: 'AIzaSyANICJaOvCyG9XRaCh0rtK0UIuAhrm8PF4',\r\n  authDomain: 'react-whatsappclone.firebaseapp.com',\r\n  projectId: 'react-whatsappclone',\r\n  storageBucket: 'react-whatsappclone.appspot.com',\r\n  messagingSenderId: '784776353266',\r\n  appId: '1:784776353266:web:8a291dbdf5708140b2c76b',\r\n};\r\n\r\nexport default firebaseConfig;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firebase-auth';\r\nimport 'firebase/firebase-firestore';\r\n\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\n\r\nconst functions = {\r\n  async fbPopup() {\r\n    const provider = new firebase.auth.FacebookAuthProvider();\r\n    return firebaseApp.auth().signInWithPopup(provider);\r\n  },\r\n  async googlePopup() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    return firebaseApp.auth().signInWithPopup(provider);\r\n  },\r\n  async addUser(user) {\r\n    await db.collection('users').doc(user.id).set({\r\n      name: user.name,\r\n      avatar: user.avatar,\r\n    }, { merge: true });\r\n  },\r\n  async getContactList(userId) {\r\n    const list = [];\r\n\r\n    const results = await db.collection('users').get();\r\n\r\n    results.forEach((result) => {\r\n      const data = result.data();\r\n\r\n      if (result.id !== userId) {\r\n        list.push({\r\n          id: result.id,\r\n          name: data.name,\r\n          avatar: data.avatar,\r\n        });\r\n      }\r\n    });\r\n\r\n    return list;\r\n  },\r\n  async addNewChat(user, userChat) {\r\n    const newChat = await db.collection('chats').add({\r\n      messages: [],\r\n      users: [user.id, userChat.id],\r\n    });\r\n\r\n    db.collection('users').doc(user.id).update({\r\n      chats: firebase.firestore.FieldValue.arrayUnion({\r\n        chat_id: newChat.id,\r\n        title: userChat.name,\r\n        image: userChat.avatar,\r\n        with: userChat.id,\r\n      }),\r\n    });\r\n\r\n    db.collection('users').doc(userChat.id).update({\r\n      chats: firebase.firestore.FieldValue.arrayUnion({\r\n        chat_id: newChat.id,\r\n        title: user.name,\r\n        image: user.avatar,\r\n        with: user.id,\r\n      }),\r\n    });\r\n  },\r\n  onChatList(userId, setChatList) {\r\n    return db.collection('users').doc(userId).onSnapshot((doc) => {\r\n      if (doc.exists) {\r\n        const data = doc.data();\r\n\r\n        if (data.chats) {\r\n          const chats = [...data.chats];\r\n\r\n          chats.sort((a, b) => {\r\n            if (a.last_message_date === undefined) return -1;\r\n            if (b.last_message_date === undefined) return 1;\r\n\r\n            return a.last_message_date.seconds < b.last_message_date.seconds ? 1 : -1;\r\n          });\r\n\r\n          setChatList(data.chats);\r\n        }\r\n      }\r\n    });\r\n  },\r\n  onChatContent(chatId, setList, setUsers) {\r\n    return db.collection('chats').doc(chatId).onSnapshot((doc) => {\r\n      if (doc.exists) {\r\n        const data = doc.data();\r\n\r\n        if (data.messages) {\r\n          setList(data.messages);\r\n          setUsers(data.users);\r\n        }\r\n      }\r\n    });\r\n  },\r\n  async sendMessage(chatData, userId, type, body, users) {\r\n    db.collection('chats').doc(chatData.chat_id).update({\r\n      messages: firebase.firestore.FieldValue.arrayUnion({\r\n        type,\r\n        author: userId,\r\n        body,\r\n        date: new Date(),\r\n      }),\r\n    });\r\n\r\n    const formatMessageDate = async (i) => {\r\n      const user = await db.collection('users').doc(users[i]).get();\r\n      const userData = user.data();\r\n\r\n      if (userData.chats) {\r\n        const chats = [...userData.chats];\r\n\r\n        // eslint-disable-next-line no-restricted-syntax\r\n        for (const e in chats) {\r\n          if (chats[e].chat_id === chatData.chat_id) {\r\n            chats[e].last_message = body;\r\n            chats[e].last_message_date = new Date();\r\n          }\r\n        }\r\n\r\n        await db.collection('users').doc(users[i]).update({\r\n          chats,\r\n        });\r\n      }\r\n    };\r\n\r\n    const promises = [];\r\n\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const user in users) {\r\n      if (user) {\r\n        formatMessageDate(user);\r\n      }\r\n    }\r\n\r\n    await Promise.all(promises);\r\n  },\r\n};\r\n\r\nexport default functions;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport './style.css';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nimport MessageItem from '../MessageItem';\r\n\r\nimport Api from '../../helpers/Api';\r\n\r\nconst ChatWindow = ({ user, data }) => {\r\n  let recognition;\r\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n  if (SpeechRecognition) recognition = new SpeechRecognition();\r\n\r\n  const body = useRef();\r\n\r\n  const [emojiOpen, setEmojiOpen] = useState(false);\r\n  const [text, setText] = useState('');\r\n  const [listening, setListening] = useState(false);\r\n  const [textPlaceholder, setTextPlaceholder] = useState('');\r\n  const [list, setList] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const handleEmojiClick = (e, emojiObject) => {\r\n    setText(text + emojiObject.emoji);\r\n  };\r\n\r\n  const handleSendClick = () => {\r\n    if (text) {\r\n      Api.sendMessage(data, user.id, 'text', text, users);\r\n      setText('');\r\n      setEmojiOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleInputKeyUp = (e) => {\r\n    if (e.key === 'Enter') handleSendClick();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (text === '') setTextPlaceholder('Digite uma mensagem');\r\n  }, [text]);\r\n\r\n  useEffect(() => {\r\n    setList([]);\r\n    return Api.onChatContent(data.chat_id, setList, setUsers);\r\n  }, [data.chat_id]);\r\n\r\n  useEffect(() => {\r\n    if (body.current.scrollHeight > body.current.offsetHeight) {\r\n      body.current.scrollTop = body.current.scrollHeight - body.current.offsetHeight;\r\n    }\r\n  }, [list]);\r\n\r\n  const handleMicClick = () => {\r\n    if (recognition) {\r\n      if (listening) {\r\n        setTextPlaceholder('Reconhecendo a voz...');\r\n        setListening(false);\r\n        recognition.stop();\r\n        return;\r\n      }\r\n\r\n      setTextPlaceholder('Fale agora');\r\n\r\n      recognition.onstart = () => {\r\n        setListening(true);\r\n      };\r\n\r\n      recognition.onend = () => {\r\n        setListening(false);\r\n      };\r\n\r\n      recognition.onresult = (e) => {\r\n        setText(e.results[0][0].transcript);\r\n      };\r\n\r\n      recognition.start();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatWindow\">\r\n      <div className=\"chatWindow--header\">\r\n        <div className=\"chatWindow--headerinfo\">\r\n          <img\r\n            src={data.image}\r\n            alt={data.title}\r\n            className=\"chatWindow--avatar\"\r\n          />\r\n\r\n          <div className=\"chatWindow--name\">{data.title}</div>\r\n        </div>\r\n\r\n        <div className=\"chatWindow--headerbuttons\">\r\n          <div className=\"chatWindow--btn\">\r\n            <SearchIcon />\r\n          </div>\r\n\r\n          <div className=\"chatWindow--btn\">\r\n            <AttachFileIcon />\r\n          </div>\r\n\r\n          <div className=\"chatWindow--btn\">\r\n            <MoreVertIcon />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div ref={body} className=\"chatWindow--body\">\r\n        {list.map((item, key) => (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <MessageItem key={key} data={item} user={user} />\r\n        ))}\r\n      </div>\r\n\r\n      <div\r\n        className=\"chatWindow--emojiarea\"\r\n        style={{ height: emojiOpen ? '250px' : '0px' }}\r\n      >\r\n        <EmojiPicker\r\n          onEmojiClick={handleEmojiClick}\r\n          disableSearchBar\r\n          disableSkinTonePicker\r\n        />\r\n      </div>\r\n\r\n      <div className=\"chatWindow--footer\">\r\n        <div className=\"chatWindow--pre\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"chatWindow--btn\"\r\n            onClick={() => setEmojiOpen(false)}\r\n            style={{ width: emojiOpen ? '40px' : '0px' }}\r\n          >\r\n            <CloseIcon />\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"chatWindow--btn\"\r\n            onClick={() => setEmojiOpen(true)}\r\n            aria-hidden=\"true\"\r\n          >\r\n            <InsertEmoticonIcon\r\n              style={{ color: emojiOpen ? '#009688' : '#919191' }}\r\n            />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"chatWindow--inputarea\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"chatWindow--input\"\r\n            placeholder={textPlaceholder}\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            onKeyUp={handleInputKeyUp}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"chatWindow--pos\">\r\n          {text\r\n            ? (\r\n              <button type=\"button\" onClick={handleSendClick} className=\"chatWindow--btn\">\r\n                <SendIcon />\r\n              </button>\r\n            )\r\n            : (\r\n              <button type=\"button\" onClick={handleMicClick} className=\"chatWindow--btn\">\r\n                <MicIcon style={{ color: listening ? '#126ece' : '#919191' }} />\r\n              </button>\r\n            )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nChatWindow.propTypes = {\r\n  data: PropTypes.shape({\r\n    chat_id: PropTypes.string.isRequired,\r\n    image: PropTypes.string,\r\n    title: PropTypes.string,\r\n  }).isRequired,\r\n  user: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default ChatWindow;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport Api from '../../helpers/Api';\r\n\r\nconst NewChat = ({ user, show, setShow }) => {\r\n  const [list, setList] = useState([]);\r\n\r\n  const getList = async () => {\r\n    if (user) {\r\n      const results = await Api.getContactList(user.id);\r\n      setList(results);\r\n    }\r\n  };\r\n\r\n  const addNewChat = async (chatUser) => {\r\n    await Api.addNewChat(user, chatUser);\r\n    setShow(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"newChat\" style={{ left: show ? 0 : -415 }}>\r\n      <div className=\"newChat--head\">\r\n        <button type=\"button\" className=\"newChat--backbutton\" onClick={() => setShow(false)}>\r\n          <ArrowBackIcon />\r\n        </button>\r\n\r\n        <div className=\"newChat-headtitle\">Nova Conversa</div>\r\n      </div>\r\n\r\n      <div className=\"newChat--list\">\r\n        {list.map((item) => (\r\n          <button type=\"button\" onClick={() => addNewChat(item)} className=\"newChat--item\" key={item.id}>\r\n            <img\r\n              className=\"newChat--itemavatar\"\r\n              src={item.avatar}\r\n              alt={item.name}\r\n            />\r\n\r\n            <div className=\"newChat--itemname\">{item.name}</div>\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNewChat.propTypes = {\r\n  user: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n  setShow: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default NewChat;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nimport Api from '../../helpers/Api';\r\n\r\nconst Login = ({ onReceive }) => {\r\n  const handleFacebookLogin = async () => {\r\n    try {\r\n      const result = await Api.fbPopup();\r\n\r\n      if (result) {\r\n        onReceive(result.user);\r\n      } else {\r\n        // eslint-disable-next-line no-alert\r\n        alert('Erro desconhecido ou permissão negada, tente novamente.');\r\n      }\r\n    } catch (error) {\r\n      // eslint-disable-next-line no-alert\r\n      alert(`${error}: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      const result = await Api.googlePopup();\r\n\r\n      if (result) {\r\n        onReceive(result.user);\r\n      } else {\r\n        // eslint-disable-next-line no-alert\r\n        alert('Erro desconhecido ou permissão negada, tente novamente.');\r\n      }\r\n    } catch (error) {\r\n      // eslint-disable-next-line no-alert\r\n      alert(`${error}: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <button type=\"button\" onClick={handleFacebookLogin}>Logar com o Facebook</button>\r\n      <button type=\"button\" onClick={handleGoogleLogin}>Logar com o Google</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  onReceive: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport ChatListItem from './components/ChatListItem';\r\nimport ChatIntro from './components/ChatIntro';\r\nimport ChatWindow from './components/ChatWindow';\r\nimport NewChat from './components/NewChat';\r\nimport Login from './components/Login';\r\n\r\nimport Api from './helpers/Api';\r\n\r\nconst App = () => {\r\n  const [chatList, setChatList] = useState([]);\r\n  const [activeChat, setActiveChat] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [showNewChat, setShowNewChat] = useState(false);\r\n\r\n  const handleLoginData = async (fbUser) => {\r\n    const newUser = {\r\n      id: fbUser.uid,\r\n      name: fbUser.displayName,\r\n      avatar: fbUser.photoURL,\r\n    };\r\n\r\n    await Api.addUser(newUser);\r\n\r\n    setUser(newUser);\r\n  };\r\n\r\n  useEffect(() => (user ? Api.onChatList(user.id, setChatList) : null), [user]);\r\n\r\n  return (\r\n    <>\r\n      {user\r\n        ? (\r\n          <div className=\"app-window\">\r\n            <div className=\"sidebar\">\r\n              <NewChat user={user} show={showNewChat} setShow={setShowNewChat} />\r\n\r\n              <header>\r\n                <img\r\n                  className=\"header--avatar\"\r\n                  src={user.avatar}\r\n                  alt=\"Avatar\"\r\n                />\r\n\r\n                <div className=\"header--buttons\">\r\n                  <button type=\"button\" className=\"header--btn\">\r\n                    <DonutLargeIcon />\r\n                  </button>\r\n\r\n                  <button type=\"button\" className=\"header--btn\" onClick={() => setShowNewChat(true)}>\r\n                    <ChatIcon />\r\n                  </button>\r\n\r\n                  <button type=\"button\" className=\"header--btn\">\r\n                    <MoreVertIcon />\r\n                  </button>\r\n                </div>\r\n              </header>\r\n\r\n              <div className=\"search\">\r\n                <div className=\"search--input\">\r\n                  <SearchIcon />\r\n\r\n                  <input\r\n                    type=\"search\"\r\n                    placeholder=\"Procurar ou começar uma nova conversa\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"chatlist\">\r\n                {chatList.map((item) => (\r\n                  <ChatListItem\r\n                    key={item.chat_id}\r\n                    data={item}\r\n                    onClick={() => setActiveChat(item)}\r\n                    active={activeChat?.id === item.id}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"contentarea\">\r\n              {activeChat ? <ChatWindow user={user} data={activeChat} /> : <ChatIntro />}\r\n            </div>\r\n          </div>\r\n        )\r\n        : <Login onReceive={handleLoginData} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}