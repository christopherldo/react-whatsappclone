{"version":3,"sources":["components/ChatListItem/index.js","components/ChatIntro/index.js","components/MessageItem/index.js","helpers/firebaseConfig.js","helpers/Api.js","components/ChatWindow/index.js","components/NewChat/index.js","components/Login/index.js","App.js","index.js"],"names":["ChatListItem","data","onClick","active","useState","time","setTime","useEffect","last_message_date","date","Date","seconds","hours","getHours","minutes","getMinutes","type","className","role","aria-selected","src","image","alt","title","last_message","ChatIntro","style","height","backgroundColor","display","flexDirection","justifyContent","alignItems","borderBottom","href","target","rel","MessageItem","user","id","author","body","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","db","firestore","functions","fbPopup","provider","auth","FacebookAuthProvider","signInWithPopup","googlePopup","GoogleAuthProvider","addUser","collection","doc","set","name","avatar","merge","getContactList","userId","list","get","forEach","result","push","sort","a","b","localeCompare","addNewChat","userChat","setActiveChat","exists","chat","chats","find","chatObject","with","add","messages","users","newChat","update","FieldValue","arrayUnion","chat_id","onChatList","setChatList","onSnapshot","undefined","onChatContent","chatId","setList","setUsers","sendMessage","chatData","formatMessageDate","i","userData","e","promises","Promise","all","ChatWindow","recognition","SpeechRecognition","window","webkitSpeechRecognition","useRef","emojiOpen","setEmojiOpen","text","setText","listening","setListening","textPlaceholder","setTextPlaceholder","handleSendClick","Api","current","scrollHeight","offsetHeight","scrollTop","ref","map","item","key","onEmojiClick","emojiObject","emoji","disableSearchBar","disableSkinTonePicker","width","aria-hidden","color","placeholder","value","onChange","onKeyUp","stop","onstart","onend","onresult","results","transcript","start","NewChat","show","setShow","getList","chatUser","left","Login","onReceive","handleFacebookLogin","alert","message","handleGoogleLogin","App","chatList","activeChat","setUser","showNewChat","setShowNewChat","handleLoginData","fbUser","newUser","uid","displayName","photoURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b27ba0f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nconst ChatListItem = ({ data, onClick, active }) => {\r\n  const [time, setTime] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (data.last_message_date) {\r\n      const date = new Date(data.last_message_date.seconds * 1000);\r\n\r\n      let hours = date.getHours();\r\n      let minutes = date.getMinutes();\r\n\r\n      hours = hours < 10 ? `0${hours}` : hours;\r\n      minutes = minutes < 10 ? `0${minutes}` : minutes;\r\n\r\n      setTime(`${hours}:${minutes}`);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <button type=\"button\" className=\"chatListItem\" onClick={onClick} role=\"row\" aria-selected={active}>\r\n      <img\r\n        className=\"chatListItem--avatar\"\r\n        src={data.image}\r\n        alt={data.title}\r\n      />\r\n\r\n      <div className=\"chatListItem--lines\">\r\n        <div className=\"chatListItem--line\">\r\n          <div className=\"chatListItem--name\">{data.title}</div>\r\n\r\n          <div className=\"chatListItem--date\">{time}</div>\r\n        </div>\r\n\r\n        <div className=\"chatListItem--line\">\r\n          <div className=\"chatListItem--lastMsg\">\r\n            <p>{data.last_message}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nChatListItem.propTypes = {\r\n  data: PropTypes.shape({\r\n    image: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    last_message: PropTypes.string,\r\n    last_message_date: PropTypes.shape({\r\n      seconds: PropTypes.number.isRequired,\r\n      nanoseconds: PropTypes.number,\r\n    }),\r\n  }).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  active: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default ChatListItem;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nconst ChatIntro = () => (\r\n  <div\r\n    className=\"chatIntro\"\r\n    style={{\r\n      height: '100%', backgroundColor: '#f8f9fa', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', borderBottom: '1px solid #4adf83',\r\n    }}\r\n  >\r\n    <img\r\n      src=\"https://web.whatsapp.com/img/intro-connection-hq-light_9466a20e6d2921a21ac7ab82419be157.jpg\"\r\n      alt=\"Whatsapp Connected\"\r\n    />\r\n\r\n    <h1>Bem-vindo ao Clone do Whatsapp</h1>\r\n\r\n    <h2>\r\n      Feito por\r\n      {' '}\r\n      <a\r\n        href=\"https://github.com/christopherldo/\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        @christopherldo\r\n      </a>\r\n    </h2>\r\n\r\n    <h2>\r\n      <a\r\n        href=\"https://github.com/christopherldo/react-whatsappclone\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Link para o projeto no Github\r\n      </a>\r\n    </h2>\r\n  </div>\r\n);\r\n\r\nexport default ChatIntro;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nconst MessageItem = ({ data, user }) => {\r\n  const [time, setTime] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (data.date) {\r\n      const date = new Date(data.date.seconds * 1000);\r\n\r\n      let hours = date.getHours();\r\n      let minutes = date.getMinutes();\r\n\r\n      hours = hours < 10 ? `0${hours}` : hours;\r\n      minutes = minutes < 10 ? `0${minutes}` : minutes;\r\n\r\n      setTime(`${hours}:${minutes}`);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"messageLine\" style={{ justifyContent: user.id === data.author ? 'flex-end' : 'flex-start' }}>\r\n      <div className=\"messageItem\" style={{ backgroundColor: user.id === data.author ? '#dcf8c6' : '#fff' }}>\r\n        <div className=\"messageText\">{data.body}</div>\r\n\r\n        <div className=\"messageDate\">{time}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMessageItem.propTypes = {\r\n  data: PropTypes.shape({\r\n    author: PropTypes.string.isRequired,\r\n    body: PropTypes.string.isRequired,\r\n    date: PropTypes.shape({\r\n      seconds: PropTypes.number.isRequired,\r\n      nanoseconds: PropTypes.number,\r\n    }).isRequired,\r\n  }).isRequired,\r\n  user: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default MessageItem;\r\n","const firebaseConfig = {\r\n  apiKey: 'AIzaSyANICJaOvCyG9XRaCh0rtK0UIuAhrm8PF4',\r\n  authDomain: 'react-whatsappclone.firebaseapp.com',\r\n  projectId: 'react-whatsappclone',\r\n  storageBucket: 'react-whatsappclone.appspot.com',\r\n  messagingSenderId: '784776353266',\r\n  appId: '1:784776353266:web:8a291dbdf5708140b2c76b',\r\n};\r\n\r\nexport default firebaseConfig;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firebase-auth';\r\nimport 'firebase/firebase-firestore';\r\n\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\n\r\nconst functions = {\r\n  async fbPopup() {\r\n    const provider = new firebase.auth.FacebookAuthProvider();\r\n    return firebaseApp.auth().signInWithPopup(provider);\r\n  },\r\n  async googlePopup() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    return firebaseApp.auth().signInWithPopup(provider);\r\n  },\r\n  async addUser(user) {\r\n    await db.collection('users').doc(user.id).set({\r\n      name: user.name,\r\n      avatar: user.avatar,\r\n    }, { merge: true });\r\n  },\r\n  async getContactList(userId) {\r\n    const list = [];\r\n\r\n    const results = await db.collection('users').get();\r\n\r\n    results.forEach((result) => {\r\n      const data = result.data();\r\n\r\n      if (result.id !== userId) {\r\n        list.push({\r\n          id: result.id,\r\n          name: data.name,\r\n          avatar: data.avatar,\r\n        });\r\n      }\r\n    });\r\n\r\n    list.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n    return list;\r\n  },\r\n  async addNewChat(user, userChat, setActiveChat) {\r\n    const result = await db.collection('users').doc(user.id).get();\r\n\r\n    if (result.exists) {\r\n      const data = result.data();\r\n      const chat = data.chats.find((chatObject) => chatObject.with === userChat.id);\r\n\r\n      if (chat) {\r\n        setActiveChat(chat);\r\n        return;\r\n      }\r\n\r\n      const newChat = await db.collection('chats').add({\r\n        messages: [],\r\n        users: [user.id, userChat.id],\r\n      });\r\n\r\n      db.collection('users').doc(user.id).update({\r\n        chats: firebase.firestore.FieldValue.arrayUnion({\r\n          chat_id: newChat.id,\r\n          title: userChat.name,\r\n          image: userChat.avatar,\r\n          with: userChat.id,\r\n        }),\r\n      });\r\n\r\n      db.collection('users').doc(userChat.id).update({\r\n        chats: firebase.firestore.FieldValue.arrayUnion({\r\n          chat_id: newChat.id,\r\n          title: user.name,\r\n          image: user.avatar,\r\n          with: user.id,\r\n        }),\r\n      });\r\n\r\n      setActiveChat({\r\n        chat_id: newChat.id,\r\n        title: userChat.name,\r\n        image: userChat.avatar,\r\n        with: userChat.id,\r\n      });\r\n    }\r\n  },\r\n  onChatList(userId, setChatList) {\r\n    return db.collection('users').doc(userId).onSnapshot((doc) => {\r\n      if (doc.exists) {\r\n        const data = doc.data();\r\n\r\n        if (data.chats) {\r\n          const chats = [...data.chats];\r\n\r\n          chats.sort((a, b) => {\r\n            if (a.last_message_date === undefined) return -1;\r\n            if (b.last_message_date === undefined) return 1;\r\n\r\n            return a.last_message_date.seconds < b.last_message_date.seconds ? 1 : -1;\r\n          });\r\n\r\n          setChatList(chats);\r\n        }\r\n      }\r\n    });\r\n  },\r\n  onChatContent(chatId, setList, setUsers) {\r\n    return db.collection('chats').doc(chatId).onSnapshot((doc) => {\r\n      if (doc.exists) {\r\n        const data = doc.data();\r\n\r\n        if (data.messages) {\r\n          setList(data.messages);\r\n          setUsers(data.users);\r\n        }\r\n      }\r\n    });\r\n  },\r\n  async sendMessage(chatData, userId, type, body, users) {\r\n    db.collection('chats').doc(chatData.chat_id).update({\r\n      messages: firebase.firestore.FieldValue.arrayUnion({\r\n        type,\r\n        author: userId,\r\n        body,\r\n        date: new Date(),\r\n      }),\r\n    });\r\n\r\n    const formatMessageDate = async (i) => {\r\n      const user = await db.collection('users').doc(users[i]).get();\r\n      const userData = user.data();\r\n\r\n      if (userData.chats) {\r\n        const chats = [...userData.chats];\r\n\r\n        // eslint-disable-next-line no-restricted-syntax\r\n        for (const e in chats) {\r\n          if (chats[e].chat_id === chatData.chat_id) {\r\n            chats[e].last_message = body;\r\n            chats[e].last_message_date = new Date();\r\n          }\r\n        }\r\n\r\n        await db.collection('users').doc(users[i]).update({\r\n          chats,\r\n        });\r\n      }\r\n    };\r\n\r\n    const promises = [];\r\n\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const user in users) {\r\n      if (user) {\r\n        formatMessageDate(user);\r\n      }\r\n    }\r\n\r\n    await Promise.all(promises);\r\n  },\r\n};\r\n\r\nexport default functions;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport './style.css';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nimport MessageItem from '../MessageItem';\r\n\r\nimport Api from '../../helpers/Api';\r\n\r\nconst ChatWindow = ({ user, data }) => {\r\n  let recognition;\r\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n  if (SpeechRecognition) recognition = new SpeechRecognition();\r\n\r\n  const body = useRef();\r\n\r\n  const [emojiOpen, setEmojiOpen] = useState(false);\r\n  const [text, setText] = useState('');\r\n  const [listening, setListening] = useState(false);\r\n  const [textPlaceholder, setTextPlaceholder] = useState('');\r\n  const [list, setList] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const handleEmojiClick = (e, emojiObject) => {\r\n    setText(text + emojiObject.emoji);\r\n  };\r\n\r\n  const handleSendClick = () => {\r\n    if (text) {\r\n      Api.sendMessage(data, user.id, 'text', text, users);\r\n      setText('');\r\n      setEmojiOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleInputKeyUp = (e) => {\r\n    if (e.key === 'Enter') handleSendClick();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (text === '') setTextPlaceholder('Digite uma mensagem');\r\n  }, [text]);\r\n\r\n  useEffect(() => {\r\n    setList([]);\r\n    return Api.onChatContent(data.chat_id, setList, setUsers);\r\n  }, [data.chat_id]);\r\n\r\n  useEffect(() => {\r\n    if (body.current.scrollHeight > body.current.offsetHeight) {\r\n      body.current.scrollTop = body.current.scrollHeight - body.current.offsetHeight;\r\n    }\r\n  }, [list]);\r\n\r\n  const handleMicClick = () => {\r\n    if (recognition) {\r\n      if (listening) {\r\n        setTextPlaceholder('Reconhecendo a voz...');\r\n        setListening(false);\r\n        recognition.stop();\r\n        return;\r\n      }\r\n\r\n      setTextPlaceholder('Fale agora');\r\n\r\n      recognition.onstart = () => {\r\n        setListening(true);\r\n      };\r\n\r\n      recognition.onend = () => {\r\n        setListening(false);\r\n      };\r\n\r\n      recognition.onresult = (e) => {\r\n        setText(e.results[0][0].transcript);\r\n      };\r\n\r\n      recognition.start();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatWindow\">\r\n      <div className=\"chatWindow--header\">\r\n        <div className=\"chatWindow--headerinfo\">\r\n          <img\r\n            src={data.image}\r\n            alt={data.title}\r\n            className=\"chatWindow--avatar\"\r\n          />\r\n\r\n          <div className=\"chatWindow--name\">{data.title}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div ref={body} className=\"chatWindow--body\">\r\n        {list.map((item, key) => (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <MessageItem key={key} data={item} user={user} />\r\n        ))}\r\n      </div>\r\n\r\n      <div\r\n        className=\"chatWindow--emojiarea\"\r\n        style={{ height: emojiOpen ? '250px' : '0px' }}\r\n      >\r\n        <EmojiPicker\r\n          onEmojiClick={handleEmojiClick}\r\n          disableSearchBar\r\n          disableSkinTonePicker\r\n        />\r\n      </div>\r\n\r\n      <div className=\"chatWindow--footer\">\r\n        <div className=\"chatWindow--pre\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"chatWindow--btn\"\r\n            onClick={() => setEmojiOpen(false)}\r\n            style={{ width: emojiOpen ? '40px' : '0px' }}\r\n          >\r\n            <CloseIcon />\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"chatWindow--btn\"\r\n            onClick={() => setEmojiOpen(true)}\r\n            aria-hidden=\"true\"\r\n          >\r\n            <InsertEmoticonIcon\r\n              style={{ color: emojiOpen ? '#009688' : '#919191' }}\r\n            />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"chatWindow--inputarea\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"chatWindow--input\"\r\n            placeholder={textPlaceholder}\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            onKeyUp={handleInputKeyUp}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"chatWindow--pos\">\r\n          {text\r\n            ? (\r\n              <button type=\"button\" onClick={handleSendClick} className=\"chatWindow--btn\">\r\n                <SendIcon />\r\n              </button>\r\n            )\r\n            : (\r\n              <button type=\"button\" onClick={handleMicClick} className=\"chatWindow--btn\">\r\n                <MicIcon style={{ color: listening ? '#126ece' : '#919191' }} />\r\n              </button>\r\n            )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nChatWindow.propTypes = {\r\n  data: PropTypes.shape({\r\n    chat_id: PropTypes.string.isRequired,\r\n    image: PropTypes.string,\r\n    title: PropTypes.string,\r\n  }).isRequired,\r\n  user: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default ChatWindow;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport Api from '../../helpers/Api';\r\n\r\nconst NewChat = ({\r\n  user, show, setShow, setActiveChat,\r\n}) => {\r\n  const [list, setList] = useState([]);\r\n\r\n  const getList = async () => {\r\n    if (user) {\r\n      const results = await Api.getContactList(user.id);\r\n\r\n      setList(results);\r\n    }\r\n  };\r\n\r\n  const addNewChat = async (chatUser) => {\r\n    await Api.addNewChat(user, chatUser, setActiveChat);\r\n    setShow(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getList();\r\n  }, [show]);\r\n\r\n  return (\r\n    <div className=\"newChat\" style={{ left: show ? 0 : -415 }}>\r\n      <div className=\"newChat--head\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"newChat--backbutton\"\r\n          onClick={() => setShow(false)}\r\n        >\r\n          <ArrowBackIcon />\r\n        </button>\r\n\r\n        <div className=\"newChat-headtitle\">Nova Conversa</div>\r\n      </div>\r\n\r\n      <div className=\"newChat--list\">\r\n        {list.map((item) => (\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => addNewChat(item)}\r\n            className=\"newChat--item\"\r\n            key={item.id}\r\n          >\r\n            <img\r\n              className=\"newChat--itemavatar\"\r\n              src={item.avatar}\r\n              alt={item.name}\r\n            />\r\n\r\n            <div className=\"newChat--itemname\">{item.name}</div>\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNewChat.propTypes = {\r\n  user: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n  setShow: PropTypes.func.isRequired,\r\n  setActiveChat: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default NewChat;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nimport Api from '../../helpers/Api';\r\n\r\nconst Login = ({ onReceive }) => {\r\n  const handleFacebookLogin = async () => {\r\n    try {\r\n      const result = await Api.fbPopup();\r\n\r\n      if (result) {\r\n        onReceive(result.user);\r\n      } else {\r\n        // eslint-disable-next-line no-alert\r\n        alert('Erro desconhecido ou permissão negada, tente novamente.');\r\n      }\r\n    } catch (error) {\r\n      // eslint-disable-next-line no-alert\r\n      alert(`${error}: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      const result = await Api.googlePopup();\r\n\r\n      if (result) {\r\n        onReceive(result.user);\r\n      } else {\r\n        // eslint-disable-next-line no-alert\r\n        alert('Erro desconhecido ou permissão negada, tente novamente.');\r\n      }\r\n    } catch (error) {\r\n      // eslint-disable-next-line no-alert\r\n      alert(`${error}: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <button type=\"button\" onClick={handleFacebookLogin}>Logar com o Facebook</button>\r\n      <button type=\"button\" onClick={handleGoogleLogin}>Logar com o Google</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  onReceive: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\nimport ChatListItem from './components/ChatListItem';\r\nimport ChatIntro from './components/ChatIntro';\r\nimport ChatWindow from './components/ChatWindow';\r\nimport NewChat from './components/NewChat';\r\nimport Login from './components/Login';\r\n\r\nimport Api from './helpers/Api';\r\n\r\nconst App = () => {\r\n  const [chatList, setChatList] = useState([]);\r\n  const [activeChat, setActiveChat] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [showNewChat, setShowNewChat] = useState(false);\r\n\r\n  const handleLoginData = async (fbUser) => {\r\n    const newUser = {\r\n      id: fbUser.uid,\r\n      name: fbUser.displayName,\r\n      avatar: fbUser.photoURL,\r\n    };\r\n\r\n    await Api.addUser(newUser);\r\n\r\n    setUser(newUser);\r\n  };\r\n\r\n  useEffect(() => (user ? Api.onChatList(user.id, setChatList) : null), [user]);\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <div className=\"app-window\">\r\n          <div className=\"sidebar\">\r\n            <NewChat\r\n              user={user}\r\n              show={showNewChat}\r\n              setShow={setShowNewChat}\r\n              chatList={chatList}\r\n              setActiveChat={setActiveChat}\r\n            />\r\n\r\n            <header>\r\n              <img className=\"header--avatar\" src={user.avatar} alt=\"Avatar\" />\r\n\r\n              <div className=\"header--buttons\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"header--btn\"\r\n                  onClick={() => setShowNewChat(true)}\r\n                >\r\n                  <ChatIcon />\r\n                </button>\r\n              </div>\r\n            </header>\r\n\r\n            <div className=\"chatlist\">\r\n              {chatList.map((item) => (\r\n                <ChatListItem\r\n                  key={item.chat_id}\r\n                  data={item}\r\n                  onClick={() => setActiveChat(item)}\r\n                  active={activeChat?.chat_id === item.chat_id}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"contentarea\">\r\n            {activeChat ? (\r\n              <ChatWindow user={user} data={activeChat} />\r\n            ) : (\r\n              <ChatIntro />\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Login onReceive={handleLoginData} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}